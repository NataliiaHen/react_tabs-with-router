{"version":3,"sources":["store/TabsContext.tsx","pages/TabsPage.tsx","App.tsx","pages/HomePage.tsx","pages/TabContent.tsx","pages/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["TabsContext","React","createContext","TabsProvider","children","Provider","value","id","title","content","useTabs","useContext","TabsPage","tabs","tabId","useParams","className","map","tab","classNames","to","getLinkClass","isActive","App","HomePage","TabContent","currentTab","find","ErrorPage","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"8OAGaA,EAAcC,IAAMC,cAAc,IAMlCC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAO9C,OACE,cAACJ,EAAYK,SAAb,CAAsBC,MAPX,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAIxC,SACGL,GAGN,EAEM,SAASM,IAGd,OAFaC,qBAAWX,EAGzB,CCvBM,IAAMY,EAAW,WACtB,IAAMC,EAAOH,IACLI,EAAUC,cAAVD,MAER,OACE,sBAAKE,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACE,UAAQ,MACRF,UAAWG,IAAW,CAAE,YAAaL,IAAUI,EAAIX,KAFrD,SAIE,cAAC,IAAD,CACEa,GAAE,UAAKF,EAAIX,IADb,SAGIW,EAAIV,SARC,SAefM,GACA,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,iCAKF,cAAC,IAAD,MAGL,EChCKK,G,kBAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCH,IAC5D,cACA,CAAE,YAAaG,GAFI,GAKRC,EAAM,kBACjB,qCAEE,qBACEP,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEI,GAAG,IACHJ,UAAWK,EAFb,kBAMA,cAAC,IAAD,CACED,GAAG,QACHJ,UAAWK,EAFb,yBAUN,qBAAKL,UAAU,UAAf,SACE,cAAC,IAAD,QA1Ba,ECXNQ,EAAW,kBACtB,oBAAIR,UAAU,QAAd,sBADsB,ECIXS,EAAa,WACxB,IAAMZ,EAAOH,IACLI,EAAUC,cAAVD,MACFY,EAAab,EAAKc,MAAK,SAACT,GAAD,OAAcA,EAAIX,KAAOO,CAAzB,IAE7B,OACE,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGU,EACCA,EAAWjB,QAEX,uBAIP,EClBYmB,EAAY,kBACvB,oBAAIZ,UAAU,QAAd,2BADuB,ECUZa,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUX,GAAG,QAC1C,cAAC,IAAD,CAAOU,KAAK,OAAOC,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,QAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cAVf,ECPpBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.b1305e2e.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Tab } from '../types/Tab';\n\nexport const TabsContext = React.createContext([] as Tab[]);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TabsProvider: React.FC<Props> = ({ children }) => {\n  const tabs = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  return (\n    <TabsContext.Provider value={tabs}>\n      {children}\n    </TabsContext.Provider>\n  );\n};\n\nexport function useTabs() {\n  const tabs = useContext(TabsContext);\n\n  return tabs;\n}\n","import { Link, Outlet, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useTabs } from '../store/TabsContext';\n\nexport const TabsPage = () => {\n  const tabs = useTabs();\n  const { tabId } = useParams();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': tabId === tab.id })}\n            >\n              <Link\n                to={`${tab.id}`}\n              >\n                { tab.title }\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {!tabId && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n\n      <Outlet />\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'is-active': isActive },\n);\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={getLinkClass}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <Outlet />\n    </div>\n  </>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { useParams } from 'react-router-dom';\nimport { useTabs } from '../store/TabsContext';\nimport { Tab } from '../types/Tab';\n\nexport const TabContent = () => {\n  const tabs = useTabs();\n  const { tabId } = useParams();\n  const currentTab = tabs.find((tab: Tab) => tab.id === tabId);\n\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {currentTab ? (\n        currentTab.content\n      ) : (\n        'Please select a tab'\n      )}\n    </div>\n  );\n};\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { TabsPage } from './pages/TabsPage';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { TabsProvider } from './store/TabsContext';\nimport { TabContent } from './pages/TabContent';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const Root = () => (\n  <Router>\n    <TabsProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"tabs\" element={<TabsPage />}>\n            <Route path=\":tabId\" element={<TabContent />} />\n          </Route>\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Route>\n      </Routes>\n    </TabsProvider>\n  </Router>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}